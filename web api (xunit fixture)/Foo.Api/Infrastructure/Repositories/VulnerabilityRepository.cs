using Dapper;
using Foo.Api.Application.Infrastructure.Common;
using Foo.Api.Domain.Interfaces;
using Foo.Api.Domain.Models;
using Microsoft.Extensions.Options;
using MySql.Data.MySqlClient;
using System.Data;
using System.Threading.Tasks;

namespace Foo.Api.Infrastructure.Repositories
{
    public class VulnerabilityRepository : IVulnerabilityRepository
    {
        private readonly MySqlConnection _context;

        public VulnerabilityRepository(IOptions<MySqlOptions> options)
        {
            _context = new MySqlConnection(options.Value.MySqlConnectionString);
        }

        public async Task<Vulnerability> AddAsync(Vulnerability vulnerability)
        {
            using (_context)
            {
                Open();
                var sql = @"
INSERT INTO vulnerability
(id, id_package_version, title, description, cvss_score, reference)
VALUES
(UUID_TO_BIN(@Id), UUID_TO_BIN(@IdPackageVersion), @Title, @Description, @CvssScore, @Reference);";

                await _context.ExecuteAsync(sql, vulnerability);

                return vulnerability;
            }
        }

        private void Open()
        {
            if (_context.State == ConnectionState.Closed)
                _context.Open();
        }
    }
}
